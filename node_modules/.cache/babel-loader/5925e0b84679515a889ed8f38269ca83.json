{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/SimilarMovies/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SimilarMovies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      similarListData: []\n    };\n\n    this.getSimilarMovies = async () => {\n      const {\n        movieId\n      } = this.props;\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${apiKey}&language=en-US&page=1`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedData = data.results.map(eachSimilarMovie => ({\n        id: eachSimilarMovie.id,\n        posterPath: eachSimilarMovie.poster_path\n      }));\n      console.log(data);\n      console.log(updatedData);\n      this.setState({\n        similarListData: updatedData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getSimilarMovies();\n  }\n\n  render() {\n    const {\n      similarListData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: similarListData.map(eachPoster => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/original/${eachPoster.posterPath}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SimilarMovies;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/SimilarMovies/index.js"],"names":["Component","Cookies","SimilarMovies","state","similarListData","getSimilarMovies","movieId","props","apiKey","get","url","options","method","response","fetch","data","json","updatedData","results","map","eachSimilarMovie","id","posterPath","poster_path","console","log","setState","componentDidMount","render","eachPoster"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,eAAe,EAAE;AADX,KAD4B;;AAAA,SASpCC,gBAToC,GASjB,YAAY;AAC7B,YAAM;AAACC,QAAAA;AAAD,UAAY,KAAKC,KAAvB;AAEA,YAAMC,MAAM,GAAGP,OAAO,CAACQ,GAAR,CAAY,eAAZ,CAAf;AAEA,YAAMC,GAAG,GAAI,sCAAqCJ,OAAQ,oBAAmBE,MAAO,wBAApF;AAEA,YAAMG,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,gBAAgB,KAAK;AACxDC,QAAAA,EAAE,EAAED,gBAAgB,CAACC,EADmC;AAExDC,QAAAA,UAAU,EAAEF,gBAAgB,CAACG;AAF2B,OAAL,CAAjC,CAApB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AAEA,WAAKS,QAAL,CAAc;AAACtB,QAAAA,eAAe,EAAEa;AAAlB,OAAd;AACD,KA/BmC;AAAA;;AAKpCU,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,gBAAL;AACD;;AA0BDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACxB,MAAAA;AAAD,QAAoB,KAAKD,KAA/B;AACA,wBACE;AAAA,gBACGC,eAAe,CAACe,GAAhB,CAAoBU,UAAU,iBAC7B;AAAA,+BACE;AACE,UAAA,GAAG,EAAG,uCAAsCA,UAAU,CAACP,UAAW;AADpE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA9CmC;;AAiDtC,eAAepB,aAAf","sourcesContent":["import {Component} from 'react'\n\nimport Cookies from 'js-cookie'\n\nclass SimilarMovies extends Component {\n  state = {\n    similarListData: [],\n  }\n\n  componentDidMount() {\n    this.getSimilarMovies()\n  }\n\n  getSimilarMovies = async () => {\n    const {movieId} = this.props\n\n    const apiKey = Cookies.get('request_token')\n\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${apiKey}&language=en-US&page=1`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const updatedData = data.results.map(eachSimilarMovie => ({\n      id: eachSimilarMovie.id,\n      posterPath: eachSimilarMovie.poster_path,\n    }))\n    console.log(data)\n\n    console.log(updatedData)\n\n    this.setState({similarListData: updatedData})\n  }\n\n  render() {\n    const {similarListData} = this.state\n    return (\n      <ul>\n        {similarListData.map(eachPoster => (\n          <li>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${eachPoster.posterPath}`}\n            />\n          </li>\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default SimilarMovies\n"]},"metadata":{},"sourceType":"module"}