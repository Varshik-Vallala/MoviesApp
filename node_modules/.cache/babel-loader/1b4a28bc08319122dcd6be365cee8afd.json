{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Header from '../Header'; // import RandomOriginals from '../RandomOriginals'\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomOriginalData: {}\n    };\n\n    this.getOriginalsData = async () => {\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/discover/tv?api_key=${apiKey}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const resultsArr = data.results;\n      const random = Math.floor(Math.random() * resultsArr.length);\n      const updatedOriginalObj = {\n        backdropPath: resultsArr[random].backdrop_path,\n        id: resultsArr[random].id,\n        name: resultsArr[random].name,\n        overview: resultsArr[random].overview\n      };\n      this.setState({\n        randomOriginalData: updatedOriginalObj\n      }); // console.log(updatedOriginalObj)\n    };\n\n    this.renderRandomOriginalMovie = async () => {\n      const {\n        randomOriginalData\n      } = this.state;\n      const {\n        backdropPath\n      } = randomOriginalData;\n      const url = `https://image.tmdb.org/t/p/original/${backdropPath}`;\n      const options = {\n        method: 'GET'\n      }; // const response = await fetch(url, options)\n      // console.log(backdropPath)\n    };\n  }\n\n  componentDidMount() {\n    this.getOriginalsData();\n    this.renderRandomOriginalMovie();\n  }\n\n  render() {\n    const {\n      randomOriginalData\n    } = this.state;\n    const {\n      backdropPath,\n      name,\n      overview\n    } = randomOriginalData;\n    const re = backdropPath === undefined ? null : `https://image.tmdb.org/t/p/original${backdropPath}`;\n    return (\n      /*#__PURE__*/\n      //   <RandomOriginals originalData={randomOriginalData} />\n      _jsxDEV(\"div\", {\n        style: {\n          backgroundImage: 'url(re)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: backdropPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/original${backdropPath}`,\n          alt: name,\n          className: \"original-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js"],"names":["Component","Cookies","Header","Home","state","randomOriginalData","getOriginalsData","apiKey","get","url","options","method","response","fetch","data","json","resultsArr","results","random","Math","floor","length","updatedOriginalObj","backdropPath","backdrop_path","id","name","overview","setState","renderRandomOriginalMovie","componentDidMount","render","re","undefined","backgroundImage"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AAEA,OAAO,aAAP;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AAACC,MAAAA,kBAAkB,EAAE;AAArB,KADmB;;AAAA,SAQ3BC,gBAR2B,GAQR,YAAY;AAC7B,YAAMC,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAY,eAAZ,CAAf;AAEA,YAAMC,GAAG,GAAI,oDAAmDF,MAAO,EAAvE;AAEA,YAAMG,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,UAAU,GAAGF,IAAI,CAACG,OAAxB;AAEA,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBF,UAAU,CAACK,MAAtC,CAAf;AAEA,YAAMC,kBAAkB,GAAG;AACzBC,QAAAA,YAAY,EAAEP,UAAU,CAACE,MAAD,CAAV,CAAmBM,aADR;AAEzBC,QAAAA,EAAE,EAAET,UAAU,CAACE,MAAD,CAAV,CAAmBO,EAFE;AAGzBC,QAAAA,IAAI,EAAEV,UAAU,CAACE,MAAD,CAAV,CAAmBQ,IAHA;AAIzBC,QAAAA,QAAQ,EAAEX,UAAU,CAACE,MAAD,CAAV,CAAmBS;AAJJ,OAA3B;AAOA,WAAKC,QAAL,CAAc;AAACvB,QAAAA,kBAAkB,EAAEiB;AAArB,OAAd,EAtB6B,CAwB7B;AACD,KAjC0B;;AAAA,SAmC3BO,yBAnC2B,GAmCC,YAAY;AACtC,YAAM;AAACxB,QAAAA;AAAD,UAAuB,KAAKD,KAAlC;AAEA,YAAM;AAACmB,QAAAA;AAAD,UAAiBlB,kBAAvB;AAEA,YAAMI,GAAG,GAAI,uCAAsCc,YAAa,EAAhE;AAEA,YAAMb,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB,CAPsC,CAWtC;AAEA;AACD,KAjD0B;AAAA;;AAG3BmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,gBAAL;AACA,SAAKuB,yBAAL;AACD;;AA6CDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAC1B,MAAAA;AAAD,QAAuB,KAAKD,KAAlC;AAEA,UAAM;AAACmB,MAAAA,YAAD;AAAeG,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,QAAiCtB,kBAAvC;AAEA,UAAM2B,EAAE,GACNT,YAAY,KAAKU,SAAjB,GACI,IADJ,GAEK,sCAAqCV,YAAa,EAHzD;AAKA;AAAA;AACE;AACA;AACE,QAAA,KAAK,EAAE;AACLW,UAAAA,eAAe,EAAE;AADZ,SADT;AAAA,gCAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,GAAG,EAAG,sCAAqCA,YAAa,EAD1D;AAEE,UAAA,GAAG,EAAEG,IAFP;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAkBD;;AA/E0B;;AAkF7B,eAAexB,IAAf","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\n\n// import RandomOriginals from '../RandomOriginals'\n\nimport './index.css'\n\nclass Home extends Component {\n  state = {randomOriginalData: {}}\n\n  componentDidMount() {\n    this.getOriginalsData()\n    this.renderRandomOriginalMovie()\n  }\n\n  getOriginalsData = async () => {\n    const apiKey = Cookies.get('request_token')\n\n    const url = `https://api.themoviedb.org/3/discover/tv?api_key=${apiKey}`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const resultsArr = data.results\n\n    const random = Math.floor(Math.random() * resultsArr.length)\n\n    const updatedOriginalObj = {\n      backdropPath: resultsArr[random].backdrop_path,\n      id: resultsArr[random].id,\n      name: resultsArr[random].name,\n      overview: resultsArr[random].overview,\n    }\n\n    this.setState({randomOriginalData: updatedOriginalObj})\n\n    // console.log(updatedOriginalObj)\n  }\n\n  renderRandomOriginalMovie = async () => {\n    const {randomOriginalData} = this.state\n\n    const {backdropPath} = randomOriginalData\n\n    const url = `https://image.tmdb.org/t/p/original/${backdropPath}`\n\n    const options = {\n      method: 'GET',\n    }\n\n    // const response = await fetch(url, options)\n\n    // console.log(backdropPath)\n  }\n\n  render() {\n    const {randomOriginalData} = this.state\n\n    const {backdropPath, name, overview} = randomOriginalData\n\n    const re =\n      backdropPath === undefined\n        ? null\n        : `https://image.tmdb.org/t/p/original${backdropPath}`\n\n    return (\n      //   <RandomOriginals originalData={randomOriginalData} />\n      <div\n        style={{\n          backgroundImage: 'url(re)',\n        }}\n      >\n        <Header />\n        <p>{name}</p>\n        <p>{backdropPath}</p>\n        <img\n          src={`https://image.tmdb.org/t/p/original${backdropPath}`}\n          alt={name}\n          className=\"original-image\"\n        />\n        <p>{overview}</p>\n      </div>\n    )\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}