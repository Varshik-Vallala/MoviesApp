{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/RandomOriginals/index.js\";\nimport { Component } from 'react';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass RandomOriginals extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOriginalImage = async () => {\n      const {\n        originalData\n      } = this.props;\n      const {\n        backdropPath\n      } = originalData;\n      console.log(backdropPath);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [' ', /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), this.getOriginalImage]\n    }, void 0, true);\n  }\n\n}\n\nexport default RandomOriginals; // class RandomOriginals extends Component {\n//   state = {\n//     originalsData: [],\n//   }\n//   componentDidMount() {\n//     this.getOriginalsData()\n//   }\n//   getOriginalsData = async () => {\n//     const url =\n//       'https://api.themoviedb.org/3/discover/tv?api_key=970d698cc21f18d0759bec348ed6e217'\n//     const options = {\n//       method: 'GET',\n//     }\n//     const response = await fetch(url, options)\n//     if (response.ok) {\n//       const data = await response.json()\n//       const updatedOriginalData = data.results.map(eachOriginal => ({\n//         backdropPath: eachOriginal.backdrop_path,\n//         id: eachOriginal.id,\n//         name: eachOriginal.name,\n//         overview: eachOriginal.overview,\n//       }))\n//       this.setState({originalsData: updatedOriginalData})\n//       const {originalsData} = this.state\n//       console.log(originalsData)\n//     }\n//     const {originalsData} = this.state\n//     const randomOriginal =\n//       originalsData[Math.floor(Math.random() * originalsData.length)]\n//     const {backdropPath, name, overview} = randomOriginal\n//     console.log(backdropPath)\n//     return <div>{name}</div>\n//   }\n//   renderRandomOriginalMovie = () => {\n//     const {originalsData} = this.state\n//     const randomOriginal =\n//       originalsData[Math.floor(Math.random() * originalsData.length)]\n//     const {backdropPath, name, overview} = randomOriginal\n//     return <div>{name}</div>\n//   }\n//   render() {\n//     const {originalsData} = this.state\n//     // const {name} = originalsData\n//     // console.log(originalsData)\n//     return (\n//       <>\n//         <Header />\n//         {/* {this.renderRandomOriginalMovie()} */}\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/RandomOriginals/index.js"],"names":["Component","Header","RandomOriginals","getOriginalImage","originalData","props","backdropPath","console","log","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACtCG,gBADsC,GACnB,YAAY;AAC7B,YAAM;AAACC,QAAAA;AAAD,UAAiB,KAAKC,KAA5B;AACA,YAAM;AAACC,QAAAA;AAAD,UAAiBF,YAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,KALqC;AAAA;;AAOtCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,GADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,KAAKN,gBAHR;AAAA,oBADF;AAOD;;AAfqC;;AAkBxC,eAAeD,eAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {Component} from 'react'\nimport Header from '../Header'\n\nclass RandomOriginals extends Component {\n  getOriginalImage = async () => {\n    const {originalData} = this.props\n    const {backdropPath} = originalData\n    console.log(backdropPath)\n  }\n\n  render() {\n    return (\n      <>\n        {' '}\n        <Header />\n        {this.getOriginalImage}\n      </>\n    )\n  }\n}\n\nexport default RandomOriginals\n\n// class RandomOriginals extends Component {\n//   state = {\n//     originalsData: [],\n//   }\n\n//   componentDidMount() {\n//     this.getOriginalsData()\n//   }\n\n//   getOriginalsData = async () => {\n//     const url =\n//       'https://api.themoviedb.org/3/discover/tv?api_key=970d698cc21f18d0759bec348ed6e217'\n\n//     const options = {\n//       method: 'GET',\n//     }\n\n//     const response = await fetch(url, options)\n//     if (response.ok) {\n//       const data = await response.json()\n//       const updatedOriginalData = data.results.map(eachOriginal => ({\n//         backdropPath: eachOriginal.backdrop_path,\n//         id: eachOriginal.id,\n//         name: eachOriginal.name,\n//         overview: eachOriginal.overview,\n//       }))\n//       this.setState({originalsData: updatedOriginalData})\n//       const {originalsData} = this.state\n\n//       console.log(originalsData)\n//     }\n\n//     const {originalsData} = this.state\n\n//     const randomOriginal =\n//       originalsData[Math.floor(Math.random() * originalsData.length)]\n\n//     const {backdropPath, name, overview} = randomOriginal\n\n//     console.log(backdropPath)\n\n//     return <div>{name}</div>\n//   }\n\n//   renderRandomOriginalMovie = () => {\n//     const {originalsData} = this.state\n\n//     const randomOriginal =\n//       originalsData[Math.floor(Math.random() * originalsData.length)]\n\n//     const {backdropPath, name, overview} = randomOriginal\n\n//     return <div>{name}</div>\n//   }\n\n//   render() {\n//     const {originalsData} = this.state\n//     // const {name} = originalsData\n\n//     // console.log(originalsData)\n\n//     return (\n//       <>\n//         <Header />\n//         {/* {this.renderRandomOriginalMovie()} */}\n//       </>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}