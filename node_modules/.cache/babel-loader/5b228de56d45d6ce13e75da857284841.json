{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetails: {}\n    };\n\n    this.getMovieDetails = async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedMovieDetails = {\n        adult: data.adult,\n        backdropPath: data.backdrop_path,\n        budget: data.budget,\n        genres: data.genres,\n        id: data.id,\n        originalTitle: data.originalTitle,\n        overview: data.overview,\n        releaseDate: data.release_date,\n        runtime: data.runtime,\n        voteAverage: data.vote_average,\n        voteCount: data.vote_count\n      };\n      console.log(data);\n      console.log(updatedMovieDetails);\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"Hii\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js"],"names":["Component","Cookies","Header","MovieDetails","state","movieDetails","getMovieDetails","match","props","params","id","apiKey","get","url","options","method","response","fetch","data","json","updatedMovieDetails","adult","backdropPath","backdrop_path","budget","genres","originalTitle","overview","releaseDate","release_date","runtime","voteAverage","vote_average","voteCount","vote_count","console","log","componentDidMount","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCI,KADmC,GAC3B;AACNC,MAAAA,YAAY,EAAE;AADR,KAD2B;;AAAA,SASnCC,eATmC,GASjB,YAAY;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAU,KAAKC,KAArB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAWF,KAAjB;AACA,YAAM;AAACG,QAAAA;AAAD,UAAOD,MAAb;AAEA,YAAME,MAAM,GAAGV,OAAO,CAACW,GAAR,CAAY,eAAZ,CAAf;AACA,YAAMC,GAAG,GAAI,sCAAqCH,EAAG,YAAWC,MAAO,iBAAvE;AAEA,YAAMG,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,mBAAmB,GAAG;AAC1BC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KADc;AAE1BC,QAAAA,YAAY,EAAEJ,IAAI,CAACK,aAFO;AAG1BC,QAAAA,MAAM,EAAEN,IAAI,CAACM,MAHa;AAI1BC,QAAAA,MAAM,EAAEP,IAAI,CAACO,MAJa;AAK1Bf,QAAAA,EAAE,EAAEQ,IAAI,CAACR,EALiB;AAM1BgB,QAAAA,aAAa,EAAER,IAAI,CAACQ,aANM;AAO1BC,QAAAA,QAAQ,EAAET,IAAI,CAACS,QAPW;AAQ1BC,QAAAA,WAAW,EAAEV,IAAI,CAACW,YARQ;AAS1BC,QAAAA,OAAO,EAAEZ,IAAI,CAACY,OATY;AAU1BC,QAAAA,WAAW,EAAEb,IAAI,CAACc,YAVQ;AAW1BC,QAAAA,SAAS,EAAEf,IAAI,CAACgB;AAXU,OAA5B;AAaAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,mBAAZ;AACD,KAtCkC;AAAA;;AAKnCiB,EAAAA,iBAAiB,GAAG;AAClB,SAAK/B,eAAL;AACD;;AAiCDgC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA/CkC;;AAkDrC,eAAenC,YAAf","sourcesContent":["import {Component} from 'react'\n\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\n\nclass MovieDetails extends Component {\n  state = {\n    movieDetails: {},\n  }\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const apiKey = Cookies.get('request_token')\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const updatedMovieDetails = {\n      adult: data.adult,\n      backdropPath: data.backdrop_path,\n      budget: data.budget,\n      genres: data.genres,\n      id: data.id,\n      originalTitle: data.originalTitle,\n      overview: data.overview,\n      releaseDate: data.release_date,\n      runtime: data.runtime,\n      voteAverage: data.vote_average,\n      voteCount: data.vote_count,\n    }\n    console.log(data)\n    console.log(updatedMovieDetails)\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        Hii\n      </div>\n    )\n  }\n}\n\nexport default MovieDetails\n"]},"metadata":{},"sourceType":"module"}