{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js\";\nimport { Component } from 'react';\nimport { BsPlayFill } from 'react-icons/bs';\nimport Loader from 'react-loader-spinner';\nimport Cookies from 'js-cookie';\nimport Header from '../Header';\nimport SimilarMovies from '../SimilarMovies';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass MovieDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetails: {},\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getMovieDetails = async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedMovieDetails = {\n        adult: data.adult,\n        backdropPath: data.backdrop_path,\n        budget: data.budget,\n        genres: data.genres,\n        homePage: data.homepage,\n        id: data.id,\n        originalTitle: data.original_title,\n        overview: data.overview,\n        releaseDate: data.release_date,\n        runtime: data.runtime,\n        spokenLanguages: data.spoken_languages,\n        voteAverage: data.vote_average,\n        voteCount: data.vote_count\n      };\n      this.setState({\n        movieDetails: updatedMovieDetails,\n        apiStatus: apiStatusConstants.success\n      }); // console.log(data)\n      // console.log(updatedMovieDetails.genres)\n    };\n\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list-loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#D81F26\",\n        height: \"60\",\n        width: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n\n    this.renderMovieList = () => {\n      const {\n        movieDetails\n      } = this.state;\n      const {\n        adult,\n        backdropPath,\n        budget,\n        genres,\n        homePage,\n        id,\n        originalTitle,\n        overview,\n        releaseDate,\n        runtime,\n        spokenLanguages,\n        voteAverage,\n        voteCount\n      } = movieDetails;\n      const year = releaseDate !== undefined ? releaseDate.split('-')[0] : null;\n\n      const timeConvert = () => {\n        const hours = Number(runtime) / 60;\n        return hours.toString() + 'hr';\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"original-image\",\n          style: {\n            backgroundImage: `url(\n          https://image.tmdb.org/t/p/original${backdropPath}\n        )`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-name\",\n              children: originalTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [runtime, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), adult ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"certification\",\n                children: \"U\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"certification\",\n                children: \"UA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"overview-text\",\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: homePage,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"play-btn details-play\",\n                children: [/*#__PURE__*/_jsxDEV(BsPlayFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"play details-play\",\n                  type: \"button\",\n                  children: \"Play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"complete-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-containers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"sub-details-container\",\n                children: genres !== undefined ? genres.map(eachGenre => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-item\",\n                  children: eachGenre.name\n                }, eachGenre.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this)) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-containers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Audio Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"sub-details-container\",\n                children: genres !== undefined ? spokenLanguages.map(eachAudio => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-item\",\n                  children: eachAudio.name\n                }, eachAudio.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-containers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Rating Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: voteCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Rating Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: voteAverage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-containers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: budget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"details-heading\",\n                children: \"Release Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: releaseDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), id !== undefined ? /*#__PURE__*/_jsxDEV(SimilarMovies, {\n            movieId: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 31\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.renderApiStatus = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderMovieList();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoader();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieDetails();\n  }\n\n  render() {\n    return this.renderApiStatus();\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js"],"names":["Component","BsPlayFill","Loader","Cookies","Header","SimilarMovies","apiStatusConstants","initial","success","failure","inProgress","MovieDetails","state","movieDetails","apiStatus","getMovieDetails","match","props","params","id","setState","apiKey","get","url","options","method","response","fetch","data","json","updatedMovieDetails","adult","backdropPath","backdrop_path","budget","genres","homePage","homepage","originalTitle","original_title","overview","releaseDate","release_date","runtime","spokenLanguages","spoken_languages","voteAverage","vote_average","voteCount","vote_count","renderLoader","renderMovieList","year","undefined","split","timeConvert","hours","Number","toString","backgroundImage","map","eachGenre","name","eachAudio","renderApiStatus","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\n\nimport {BsPlayFill} from 'react-icons/bs'\n\nimport Loader from 'react-loader-spinner'\n\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport SimilarMovies from '../SimilarMovies'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass MovieDetails extends Component {\n  state = {\n    movieDetails: {},\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const apiKey = Cookies.get('request_token')\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const updatedMovieDetails = {\n      adult: data.adult,\n      backdropPath: data.backdrop_path,\n      budget: data.budget,\n      genres: data.genres,\n      homePage: data.homepage,\n      id: data.id,\n      originalTitle: data.original_title,\n      overview: data.overview,\n      releaseDate: data.release_date,\n      runtime: data.runtime,\n      spokenLanguages: data.spoken_languages,\n      voteAverage: data.vote_average,\n      voteCount: data.vote_count,\n    }\n\n    this.setState({\n      movieDetails: updatedMovieDetails,\n      apiStatus: apiStatusConstants.success,\n    })\n    // console.log(data)\n    // console.log(updatedMovieDetails.genres)\n  }\n\n  //   getSimilarMovies = () => {\n  //     const url =\n  //       'https://api.themoviedb.org/3/movie/{MOVIE_ID}/similar?api_key={API_KEY}&language=en-US&page={1}'\n  //   }\n\n  renderLoader = () => (\n    <div className=\"movies-list-loader\">\n      <Loader type=\"Oval\" color=\"#D81F26\" height=\"60\" width=\"60\" />\n    </div>\n  )\n\n  renderMovieList = () => {\n    const {movieDetails} = this.state\n\n    const {\n      adult,\n      backdropPath,\n      budget,\n      genres,\n      homePage,\n      id,\n      originalTitle,\n      overview,\n      releaseDate,\n      runtime,\n      spokenLanguages,\n      voteAverage,\n      voteCount,\n    } = movieDetails\n\n    const year = releaseDate !== undefined ? releaseDate.split('-')[0] : null\n    const timeConvert = () => {\n      const hours = Number(runtime) / 60\n      return hours.toString() + 'hr'\n    }\n    return (\n      <>\n        <div\n          className=\"original-image\"\n          style={{\n            backgroundImage: `url(\n          https://image.tmdb.org/t/p/original${backdropPath}\n        )`,\n          }}\n        >\n          <div>\n            <Header />\n            <p className=\"movie-name\">{originalTitle}</p>\n            <div className=\"details\">\n              <p>{runtime} min</p>\n              {adult ? (\n                <p className=\"certification\">U</p>\n              ) : (\n                <p className=\"certification\">UA</p>\n              )}\n              <p>{year}</p>\n            </div>\n            <p className=\"overview-text\">{overview}</p>\n            <a href={homePage} target=\"_blank\" rel=\"noopener noreferrer\">\n              <div className=\"play-btn details-play\">\n                <BsPlayFill />\n                <button className=\"play details-play\" type=\"button\">\n                  Play\n                </button>\n              </div>\n            </a>\n          </div>\n          <div className=\"empty-container\">\n            <p> </p>\n          </div>\n        </div>\n        <div className=\"complete-movie-details\">\n          <div className=\"movie-details-container\">\n            <div className=\"sub-containers\">\n              <p className=\"details-heading\">Genres</p>\n              <ul className=\"sub-details-container\">\n                {genres !== undefined\n                  ? genres.map(eachGenre => (\n                      <li className=\"list-item\" key={eachGenre.id}>\n                        {eachGenre.name}\n                      </li>\n                    ))\n                  : null}\n              </ul>\n            </div>\n            <div className=\"sub-containers\">\n              <p className=\"details-heading\">Audio Languages</p>\n              <ul className=\"sub-details-container\">\n                {genres !== undefined\n                  ? spokenLanguages.map(eachAudio => (\n                      <li className=\"list-item\" key={eachAudio.name}>\n                        {eachAudio.name}\n                      </li>\n                    ))\n                  : null}\n              </ul>\n            </div>\n            <div className=\"sub-containers\">\n              <p className=\"details-heading\">Rating Count</p>\n              <p>{voteCount}</p>\n              <p className=\"details-heading\">Rating Average</p>\n              <p>{voteAverage}</p>\n            </div>\n            <div className=\"sub-containers\">\n              <p className=\"details-heading\">Budget</p>\n              <p>{budget}</p>\n              <p className=\"details-heading\">Release Date</p>\n              <p>{releaseDate}</p>\n            </div>\n          </div>\n          {id !== undefined ? <SimilarMovies movieId={id} /> : null}\n        </div>\n      </>\n    )\n  }\n\n  renderApiStatus = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderMovieList()\n      case apiStatusConstants.inProgress:\n        return this.renderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return this.renderApiStatus()\n  }\n}\n\nexport default MovieDetails\n"]},"metadata":{},"sourceType":"module"}