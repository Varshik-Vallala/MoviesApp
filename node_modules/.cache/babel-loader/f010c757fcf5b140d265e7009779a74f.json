{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js\";\nimport { Component } from 'react';\nimport { BsPlayFill } from 'react-icons/bs';\nimport Cookies from 'js-cookie';\nimport Header from '../Header';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MovieDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieDetails: {}\n    };\n\n    this.getMovieDetails = async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedMovieDetails = {\n        adult: data.adult,\n        backdropPath: data.backdrop_path,\n        budget: data.budget,\n        genres: data.genres,\n        id: data.id,\n        originalTitle: data.original_title,\n        overview: data.overview,\n        releaseDate: data.release_date.split('-')[0],\n        runtime: data.runtime,\n        voteAverage: data.vote_average,\n        voteCount: data.vote_count\n      };\n      this.setState({\n        movieDetails: updatedMovieDetails\n      });\n      console.log(data);\n      console.log(updatedMovieDetails);\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieDetails();\n  }\n\n  render() {\n    const {\n      movieDetails\n    } = this.state;\n    const {\n      adult,\n      backdropPath,\n      budget,\n      genres,\n      id,\n      originalTitle,\n      overview,\n      releaseDate,\n      runtime,\n      voteAverage,\n      voteCount\n    } = movieDetails;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"original-image\",\n        style: {\n          backgroundImage: `url(\n          https://image.tmdb.org/t/p/original${backdropPath}\n        )`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-name\",\n            children: originalTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [runtime, \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), adult ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"certification\",\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"certification\",\n              children: \"UA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: releaseDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"overview-text\",\n            children: overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"play-btn\",\n            children: [/*#__PURE__*/_jsxDEV(BsPlayFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play\",\n              type: \"button\",\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: genres.map(eachGenre => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: eachGenre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/MovieDetails/index.js"],"names":["Component","BsPlayFill","Cookies","Header","MovieDetails","state","movieDetails","getMovieDetails","match","props","params","id","apiKey","get","url","options","method","response","fetch","data","json","updatedMovieDetails","adult","backdropPath","backdrop_path","budget","genres","originalTitle","original_title","overview","releaseDate","release_date","split","runtime","voteAverage","vote_average","voteCount","vote_count","setState","console","log","componentDidMount","render","backgroundImage","map","eachGenre","name"],"mappings":"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","sourcesContent":["import {Component} from 'react'\n\nimport {BsPlayFill} from 'react-icons/bs'\n\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\n\nimport './index.css'\n\nclass MovieDetails extends Component {\n  state = {\n    movieDetails: {},\n  }\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const apiKey = Cookies.get('request_token')\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const updatedMovieDetails = {\n      adult: data.adult,\n      backdropPath: data.backdrop_path,\n      budget: data.budget,\n      genres: data.genres,\n      id: data.id,\n      originalTitle: data.original_title,\n      overview: data.overview,\n      releaseDate: data.release_date.split('-')[0],\n      runtime: data.runtime,\n      voteAverage: data.vote_average,\n      voteCount: data.vote_count,\n    }\n\n    this.setState({movieDetails: updatedMovieDetails})\n    console.log(data)\n    console.log(updatedMovieDetails)\n  }\n\n  render() {\n    const {movieDetails} = this.state\n\n    const {\n      adult,\n      backdropPath,\n      budget,\n      genres,\n      id,\n      originalTitle,\n      overview,\n      releaseDate,\n      runtime,\n      voteAverage,\n      voteCount,\n    } = movieDetails\n\n    return (\n      <>\n        <div\n          className=\"original-image\"\n          style={{\n            backgroundImage: `url(\n          https://image.tmdb.org/t/p/original${backdropPath}\n        )`,\n          }}\n        >\n          <div>\n            <Header />\n            <p className=\"movie-name\">{originalTitle}</p>\n            <div className=\"details\">\n              <p>{runtime} min</p>\n              {adult ? (\n                <p className=\"certification\">U</p>\n              ) : (\n                <p className=\"certification\">UA</p>\n              )}\n              <p>{releaseDate}</p>\n            </div>\n            <p className=\"overview-text\">{overview}</p>\n            <div className=\"play-btn\">\n              <BsPlayFill />\n              <button className=\"play\" type=\"button\">\n                Play\n              </button>\n            </div>\n          </div>\n          <div className=\"empty-container\">\n            <p> </p>\n          </div>\n        </div>\n        <div>\n          <ul>\n            {genres.map(eachGenre => (\n              <li>{eachGenre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MovieDetails\n"]},"metadata":{},"sourceType":"module"}