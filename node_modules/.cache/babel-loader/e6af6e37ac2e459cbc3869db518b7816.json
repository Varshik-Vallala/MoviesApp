{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js\";\nimport { Component } from 'react';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      originalsData: []\n    };\n\n    this.getTrendingMovies = async () => {\n      const url = 'https://api.themoviedb.org/3/trending/all/week?api_key=970d698cc21f18d0759bec348ed6e217';\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      console.log(data);\n    };\n\n    this.getOriginals = async () => {\n      const url = 'https://api.themoviedb.org/3/discover/tv?api_key=970d698cc21f18d0759bec348ed6e217';\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedOriginalData = data.results.map(eachOriginal => ({\n        backdropPath: eachOriginal.backdrop_path,\n        id: eachOriginal.id,\n        name: eachOriginal.name,\n        overview: eachOriginal.overview\n      }));\n      this.setState({\n        originalsData: updatedOriginalData\n      });\n      console.log(updatedOriginalData);\n    };\n\n    this.renderRandomOriginals = () => {\n      const {\n        originalsData\n      } = this.state;\n      const randomOriginal = originalsData[Math.floor(Math.random() * originalsData.length)];\n    };\n  }\n\n  componentDidMount() {\n    // this.getTrendingMovies()\n    this.getOriginals();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js"],"names":["Component","Header","Home","state","originalsData","getTrendingMovies","url","options","method","response","fetch","data","json","console","log","getOriginals","updatedOriginalData","results","map","eachOriginal","backdropPath","backdrop_path","id","name","overview","setState","renderRandomOriginals","randomOriginal","Math","floor","random","length","componentDidMount","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,aAAa,EAAE;AADT,KADmB;;AAAA,SAU3BC,iBAV2B,GAUP,YAAY;AAC9B,YAAMC,GAAG,GACP,yFADF;AAGA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAtB0B;;AAAA,SAwB3BI,YAxB2B,GAwBZ,YAAY;AACzB,YAAMT,GAAG,GACP,mFADF;AAGA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,YAAMI,mBAAmB,GAAGL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAiBC,YAAY,KAAK;AAC5DC,QAAAA,YAAY,EAAED,YAAY,CAACE,aADiC;AAE5DC,QAAAA,EAAE,EAAEH,YAAY,CAACG,EAF2C;AAG5DC,QAAAA,IAAI,EAAEJ,YAAY,CAACI,IAHyC;AAI5DC,QAAAA,QAAQ,EAAEL,YAAY,CAACK;AAJqC,OAAL,CAA7B,CAA5B;AAOA,WAAKC,QAAL,CAAc;AAACrB,QAAAA,aAAa,EAAEY;AAAhB,OAAd;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,mBAAZ;AACD,KA7C0B;;AAAA,SA+C3BU,qBA/C2B,GA+CH,MAAM;AAC5B,YAAM;AAACtB,QAAAA;AAAD,UAAkB,KAAKD,KAA7B;AAEA,YAAMwB,cAAc,GAClBvB,aAAa,CAACwB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB1B,aAAa,CAAC2B,MAAzC,CAAD,CADf;AAED,KApD0B;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKjB,YAAL;AACD;;AA8CDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AA5D0B;;AA+D7B,eAAe/B,IAAf","sourcesContent":["import {Component} from 'react'\nimport Header from '../Header'\n\nclass Home extends Component {\n  state = {\n    originalsData: [],\n  }\n\n  componentDidMount() {\n    // this.getTrendingMovies()\n    this.getOriginals()\n  }\n\n  getTrendingMovies = async () => {\n    const url =\n      'https://api.themoviedb.org/3/trending/all/week?api_key=970d698cc21f18d0759bec348ed6e217'\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    console.log(data)\n  }\n\n  getOriginals = async () => {\n    const url =\n      'https://api.themoviedb.org/3/discover/tv?api_key=970d698cc21f18d0759bec348ed6e217'\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    const updatedOriginalData = data.results.map(eachOriginal => ({\n      backdropPath: eachOriginal.backdrop_path,\n      id: eachOriginal.id,\n      name: eachOriginal.name,\n      overview: eachOriginal.overview,\n    }))\n\n    this.setState({originalsData: updatedOriginalData})\n\n    console.log(updatedOriginalData)\n  }\n\n  renderRandomOriginals = () => {\n    const {originalsData} = this.state\n\n    const randomOriginal =\n      originalsData[Math.floor(Math.random() * originalsData.length)]\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n      </>\n    )\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}