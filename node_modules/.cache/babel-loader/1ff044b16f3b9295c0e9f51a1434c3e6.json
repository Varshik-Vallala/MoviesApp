{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { BsPlayFill } from 'react-icons/bs';\nimport Header from '../Header'; // import RandomOriginals from '../RandomOriginals'\n\nimport './index.css';\nimport TrendingMovies from '../TrendingMovies';\nimport TopRated from '../TopRated';\nimport Footer from '../Footer';\nimport Originals from '../Originals';\nimport RandomOriginals from '../RandomOriginals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomOriginalData: {}\n    };\n\n    this.getOriginalsData = async () => {\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/discover/tv?api_key=${apiKey}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const resultsArr = data.results;\n      const random = Math.floor(Math.random() * resultsArr.length);\n      const updatedOriginalObj = {\n        backdropPath: resultsArr[random].backdrop_path,\n        id: resultsArr[random].id,\n        name: resultsArr[random].name,\n        overview: resultsArr[random].overview\n      };\n      this.setState({\n        randomOriginalData: updatedOriginalObj\n      }); // console.log(updatedOriginalObj)\n    };\n  }\n\n  componentDidMount() {\n    this.getOriginalsData(); // this.renderRandomOriginalMovie()\n  }\n\n  //   renderRandomOriginalMovie = async () => {\n  //     const {randomOriginalData} = this.state\n  //     const {backdropPath} = randomOriginalData\n  //     const url = `https://image.tmdb.org/t/p/original/${backdropPath}`\n  //     const options = {\n  //       method: 'GET',\n  //     }\n  //     // const response = await fetch(url, options)\n  //     // console.log(backdropPath)\n  //   }\n  render() {\n    const {\n      randomOriginalData\n    } = this.state;\n    const {\n      backdropPath,\n      name,\n      overview\n    } = randomOriginalData; // console.log(randomOriginalData)\n    // const re =\n    //   backdropPath === undefined\n    //     ? null\n    //     : `https://image.tmdb.org/t/p/original${backdropPath}`\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RandomOriginals, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-category-movies\",\n        children: [/*#__PURE__*/_jsxDEV(TrendingMovies, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopRated, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Originals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/Home/index.js"],"names":["Component","Cookies","BsPlayFill","Header","TrendingMovies","TopRated","Footer","Originals","RandomOriginals","Home","state","randomOriginalData","getOriginalsData","apiKey","get","url","options","method","response","fetch","data","json","resultsArr","results","random","Math","floor","length","updatedOriginalObj","backdropPath","backdrop_path","id","name","overview","setState","componentDidMount","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAAQC,UAAR,QAAyB,gBAAzB;AAEA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AAEA,OAAO,aAAP;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BU,KAD2B,GACnB;AAACC,MAAAA,kBAAkB,EAAE;AAArB,KADmB;;AAAA,SAQ3BC,gBAR2B,GAQR,YAAY;AAC7B,YAAMC,MAAM,GAAGZ,OAAO,CAACa,GAAR,CAAY,eAAZ,CAAf;AAEA,YAAMC,GAAG,GAAI,oDAAmDF,MAAO,EAAvE;AAEA,YAAMG,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAIA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,UAAU,GAAGF,IAAI,CAACG,OAAxB;AAEA,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBF,UAAU,CAACK,MAAtC,CAAf;AAEA,YAAMC,kBAAkB,GAAG;AACzBC,QAAAA,YAAY,EAAEP,UAAU,CAACE,MAAD,CAAV,CAAmBM,aADR;AAEzBC,QAAAA,EAAE,EAAET,UAAU,CAACE,MAAD,CAAV,CAAmBO,EAFE;AAGzBC,QAAAA,IAAI,EAAEV,UAAU,CAACE,MAAD,CAAV,CAAmBQ,IAHA;AAIzBC,QAAAA,QAAQ,EAAEX,UAAU,CAACE,MAAD,CAAV,CAAmBS;AAJJ,OAA3B;AAOA,WAAKC,QAAL,CAAc;AAACvB,QAAAA,kBAAkB,EAAEiB;AAArB,OAAd,EAtB6B,CAwB7B;AACD,KAjC0B;AAAA;;AAG3BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,gBAAL,GADkB,CAElB;AACD;;AA6BD;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEAwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACzB,MAAAA;AAAD,QAAuB,KAAKD,KAAlC;AAEA,UAAM;AAACmB,MAAAA,YAAD;AAAeG,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,QAAiCtB,kBAAvC,CAHO,CAKP;AAEA;AACA;AACA;AACA;;AAEA,wBACE;AAAA,8BAwBE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAxBF,eAyBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA,oBADF;AAkCD;;AAjG0B;;AAoG7B,eAAeF,IAAf","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\n\nimport {BsPlayFill} from 'react-icons/bs'\n\nimport Header from '../Header'\n\n// import RandomOriginals from '../RandomOriginals'\n\nimport './index.css'\n\nimport TrendingMovies from '../TrendingMovies'\nimport TopRated from '../TopRated'\nimport Footer from '../Footer'\nimport Originals from '../Originals'\nimport RandomOriginals from '../RandomOriginals'\n\nclass Home extends Component {\n  state = {randomOriginalData: {}}\n\n  componentDidMount() {\n    this.getOriginalsData()\n    // this.renderRandomOriginalMovie()\n  }\n\n  getOriginalsData = async () => {\n    const apiKey = Cookies.get('request_token')\n\n    const url = `https://api.themoviedb.org/3/discover/tv?api_key=${apiKey}`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const resultsArr = data.results\n\n    const random = Math.floor(Math.random() * resultsArr.length)\n\n    const updatedOriginalObj = {\n      backdropPath: resultsArr[random].backdrop_path,\n      id: resultsArr[random].id,\n      name: resultsArr[random].name,\n      overview: resultsArr[random].overview,\n    }\n\n    this.setState({randomOriginalData: updatedOriginalObj})\n\n    // console.log(updatedOriginalObj)\n  }\n\n  //   renderRandomOriginalMovie = async () => {\n  //     const {randomOriginalData} = this.state\n\n  //     const {backdropPath} = randomOriginalData\n\n  //     const url = `https://image.tmdb.org/t/p/original/${backdropPath}`\n\n  //     const options = {\n  //       method: 'GET',\n  //     }\n\n  //     // const response = await fetch(url, options)\n\n  //     // console.log(backdropPath)\n  //   }\n\n  render() {\n    const {randomOriginalData} = this.state\n\n    const {backdropPath, name, overview} = randomOriginalData\n\n    // console.log(randomOriginalData)\n\n    // const re =\n    //   backdropPath === undefined\n    //     ? null\n    //     : `https://image.tmdb.org/t/p/original${backdropPath}`\n\n    return (\n      <>\n        {/* <div\n          className=\"original-image\"\n          style={{\n            backgroundImage: `url(\n          https://image.tmdb.org/t/p/original${backdropPath}\n        )`,\n          }}\n        >\n          <div>\n            <Header />\n            <p className=\"movie-name\">{name}</p>\n            <p className=\"overview-text\">{overview}</p>\n            <div className=\"play-btn\">\n              <BsPlayFill />\n              <button className=\"play\" type=\"button\">\n                Play\n              </button>\n            </div>\n          </div>\n          <div className=\"empty-container\">\n            <p> </p>\n          </div>\n        </div> */}\n        <RandomOriginals />\n        <div className=\"all-category-movies\">\n          <TrendingMovies />\n          <TopRated />\n          <Originals />\n          <Footer />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}