{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/components/TopRated/index.js\";\nimport { Component } from 'react';\nimport Slider from 'react-slick';\nimport Cookies from 'js-cookie';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 6,\n  slidesToScroll: 1,\n  responsive: [{\n    breakpoint: 1024,\n    settings: {\n      slidesToShow: 6,\n      slidesToScroll: 3,\n      infinite: true\n    }\n  }, {\n    breakpoint: 600,\n    settings: {\n      slidesToShow: 2,\n      slidesToScroll: 2,\n      initialSlide: 2\n    }\n  }, {\n    breakpoint: 480,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 3\n    }\n  }]\n};\n\nclass TopRated extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topRatedMovies: []\n    };\n\n    this.getTopRatedMovies = async () => {\n      const apiKey = Cookies.get('request_token');\n      const url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const updatedData = data.results.map(eachMovie => ({\n        id: eachMovie.id,\n        posterPath: eachMovie.poster_path\n      }));\n      this.setState({\n        topRatedMovies: updatedData\n      });\n      console.log(updatedData);\n    };\n\n    this.renderSlider = () => {\n      const {\n        moviesList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n        children: moviesList.map(movie => {\n          const movieImage = `https://image.tmdb.org/t/p/original/${movie.posterPath}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react-slick-item\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: movie.id,\n              className: \"poster\",\n              src: movieImage,\n              width: \"100%\",\n              height: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.getTopRatedMovies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hii\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default TopRated;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/components/TopRated/index.js"],"names":["Component","Slider","Cookies","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","TopRated","state","topRatedMovies","getTopRatedMovies","apiKey","get","url","options","method","response","fetch","data","json","updatedData","results","map","eachMovie","id","posterPath","poster_path","setState","console","log","renderSlider","moviesList","movie","movieImage","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\n\nimport Slider from 'react-slick'\n\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 6,\n  slidesToScroll: 1,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 3,\n        infinite: true,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n      },\n    },\n  ],\n}\n\nclass TopRated extends Component {\n  state = {\n    topRatedMovies: [],\n  }\n\n  componentDidMount() {\n    this.getTopRatedMovies()\n  }\n\n  getTopRatedMovies = async () => {\n    const apiKey = Cookies.get('request_token')\n\n    const url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US`\n\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n\n    const data = await response.json()\n\n    const updatedData = data.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: eachMovie.poster_path,\n    }))\n\n    this.setState({topRatedMovies: updatedData})\n\n    console.log(updatedData)\n  }\n\n  renderSlider = () => {\n    const {moviesList} = this.state\n\n    return (\n      <Slider {...settings}>\n        {moviesList.map(movie => {\n          const movieImage = `https://image.tmdb.org/t/p/original/${movie.posterPath}`\n          return (\n            <div className=\"react-slick-item\" key={movie.id}>\n              <img\n                alt={movie.id}\n                className=\"poster\"\n                src={movieImage}\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          )\n        })}\n      </Slider>\n    )\n  }\n\n  render() {\n    return <h1>hii</h1>\n  }\n}\n\nexport default TopRated\n"]},"metadata":{},"sourceType":"module"}